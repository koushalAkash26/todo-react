{"version":3,"sources":["components/appStyle.module.css","logo.svg","images/push-pin.png","images/accept.png","components/icontoggler.js","components/outputbox.js","components/input Box.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Icontoggler","useState","active","setActive","handleChangeActive","status","className","style","src","Active","alt","onClick","inactive","Inactive","Outputbox","collection","signal","map","todo","storageList","InputBox","task","SetTask","state","setState","list","setList","value","onChange","e","target","push","console","log","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yFACAA,EAAOC,QAAU,CAAC,OAAS,yBAAyB,SAAW,6B,2HCDhD,I,YCAA,MAA0B,qCCA1B,MAA0B,mC,uBCiC1BC,MA5Bf,WACI,MAA4BC,oBAAS,GAArC,mBAAOC,EAAP,KAAeC,EAAf,KACMC,EAAqB,WACvBD,GAAU,SAACE,GACT,OAAQA,MAGd,OACI,mCACKH,EACH,qBACEI,UAAWC,IAAML,OACjBM,IAAKC,EACLC,IAAI,OACJC,QAAUP,IAGZ,qBACEE,UAAWC,IAAMK,SACjBJ,IAAKK,EACLH,IAAI,MACJC,QAAUP,OCGPU,MArBf,YAAyC,IAArBC,EAAoB,EAApBA,WAEhB,OAFoC,EAATC,OAIvB,8BACKD,EAAWE,KAAI,SAACC,GAAD,OAAQ,gCAAK,cAAC,EAAD,IAAL,IAAkCA,UAW1D,yBCtBNC,EAAY,GAiCHC,MA/Bf,WACG,MAAoBnB,mBAAS,IAA7B,mBAAMoB,EAAN,KAAWC,EAAX,KAEA,EAAsBrB,oBAAS,GAA/B,mBAAMsB,EAAN,KAAYC,EAAZ,KACA,EAAoBvB,mBAAS,IAA7B,mBAAMwB,EAAN,KAAWC,EAAX,KAYC,OACI,gCACG,uBAAOC,MAAON,EAAMO,SAAU,SAACC,GAAD,OAAKP,EAAQO,EAAEC,OAAOH,UAEpD,wBAAQhB,QAfF,WACVa,GAAS,GACTL,EAAYY,KAAKV,GACjBW,QAAQC,IAAIZ,GACZW,QAAQC,IAAId,GACZO,EAAQP,GACRG,EAAQ,KASJ,iBAGA,cAAC,EAAD,CAAWP,WAAYU,EAAMT,OAAQO,QCdjCW,MATf,WACE,OACE,qBAAK5B,UAAU,MAAf,SACE,cAAC,EAAD,OCKS6B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.9c7c4aa4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"active\":\"appStyle_active__1ptl9\",\"inactive\":\"appStyle_inactive__o9yXR\"};","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","export default __webpack_public_path__ + \"static/media/push-pin.ecd211c6.png\";","export default __webpack_public_path__ + \"static/media/accept.e7f61d7e.png\";","import React,{useState} from 'react'\nimport Inactive from \"../images/push-pin.png\";\nimport Active from \"../images/accept.png\";\nimport style from './appStyle.module.css'\n\nfunction Icontoggler() {\n    const [active, setActive] = useState(false);\n    const handleChangeActive = () => {\n        setActive((status) => {\n          return !status;\n        });\n      };\n    return (\n        <>\n            {active ? (\n          <img\n            className={style.active}\n            src={Active}\n            alt=\"tick\"\n            onClick={ handleChangeActive}\n          />\n        ) : (\n          <img\n            className={style.inactive}\n            src={Inactive}\n            alt=\"pin\"\n            onClick={ handleChangeActive}\n          />\n        )}\n        </>\n    )\n}\n\nexport default Icontoggler\n","import React from 'react'\n// import { BsFillPinAngleFill } from 'react-icons/bs';\n// import { BsCheckLg } from 'react-icons/bs';\nimport Icontoggler from './icontoggler'\n\n\n\n\nfunction Outputbox({collection,signal}) {\n    \n    if(signal){\n    return (\n        <div>\n            {collection.map((todo)=><div><Icontoggler></Icontoggler> {todo}</div>)}\n            \n        </div>\n        // <div>\n        //    <div> <BsFillPinAngleFill></BsFillPinAngleFill>   {props.coll} </div>\n        //    {/* <div>{props.activity}</div> */}\n        // </div>\n    )\n    }\n    else{\n        return(\n            <div></div>\n        )\n    }\n}\n\nexport default Outputbox\n","import React,{useState} from 'react'\nimport Outputbox from './outputbox'\nconst storageList=[]\n\nfunction InputBox() {\n   const[task,SetTask]=useState(\"\")\n//    const[descrip,SetDescrip]=useState(\"\")\n   const[state,setState]=useState(false)\n   const[list,setList]=useState([])\n   const creator=()=>{\n       setState(true)\n       storageList.push(task)\n       console.log(task)\n       console.log(storageList)\n       setList(storageList)\n       SetTask(\"\")\n       \n       \n       \n   }\n    return (\n        <div>\n           <input value={task} onChange={(e)=>SetTask(e.target.value)}></input>\n           {/* <input value={descrip} onChange={(e)=>SetDescrip(e.target.value)}></input> */}\n           <button onClick={creator}>ADD</button>\n          \n           {/* {state && <Outputbox collection={list}></Outputbox>} */}\n           <Outputbox collection={list} signal={state}></Outputbox>\n           \n           \n\n        </div>\n    )\n}\n\nexport default InputBox\n","import logo from './logo.svg';\nimport './App.css';\nimport InputBox from './components/input Box'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <InputBox></InputBox>\n      \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}